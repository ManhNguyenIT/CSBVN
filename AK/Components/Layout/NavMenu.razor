@using AK.Services
@inject NavigationManager naviManger
@inject IPageNavigationService pageNavi
@inject IComDataService comService
@inject IDataSendService dataSender

<nav class="navbar navbar-light bg-warning">
    <div class="container-fluid">
        <form class="d-flex gap-2">
            <button @onclick="SettingClick" class="ps-10 pe-10 ms-15 btn btn-outline-warning bg-white" type="button">Cài đặt</button>
            <button @onclick="PrevClick" class="ps-10 pe-10 ms-15 btn btn-outline-warning bg-white" type="button">Lùi trang</button>
            <button @onclick="NextClick" class="ps-10 pe-10 me-15 btn btn-outline-warning bg-white" type="button">Tiến trang</button>
            <button @onclick="CheckClick" class="ps-10 pe-10 btn btn-outline-warning bg-white" type="button">Kiểm tra hệ thống</button>
            <button @onclick="NotifyClick" class="ps-10 pe-10 btn btn-outline-warning bg-white" type="button">Thông báo chạm chập</button>
        </form>
    </div>
</nav>

@code {
    private List<string> navLinks = new List<string> { "monitor", "setting", "check", "notify", "mission" };
    private int currentLinkIndex = 0;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        pageNavi.PageChanged += HandlePageChanged;
        pageNavi.TotalPage = navLinks.Count;
        if (comService.IsConnected())
        {
            pageNavi.NavigateTo(currentLinkIndex);
        }
        else
        {
            pageNavi.NavigateTo(4);
        }
    }

    private void HandlePageChanged(int pageIndex)
    {
        _ = InvokeAsync(() =>
        {
            NavigateToLink(navLinks[pageIndex]);
            StateHasChanged();
        });
    }

    private void SettingClick()
    {
        pageNavi.NavigateTo(1);
    }

    private void PrevClick()
    {
        pageNavi.NavigateBack();
    }

    private void NextClick()
    {
        pageNavi.NavigateForward();
    }

    private void CheckClick()
    {
        pageNavi.NavigateTo(2);
    }

    private void NotifyClick()
    {
        pageNavi.NavigateTo(3);
    }

    private void NavigateToLink(string link)
    {
        currentLinkIndex = navLinks.IndexOf(link);
        naviManger.NavigateTo(link);
    }

    private void CloseApp()
    {
        System.Environment.Exit(0);
    }

    public void Dispose()
    {
        pageNavi.PageChanged -= HandlePageChanged;
    }

}

